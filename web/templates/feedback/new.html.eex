<h2>New feedback</h2>

<%= unless @score == nil do %>
  <h4>Score: <%= @score.score%></h4>
  <h4>Job: <%= Map.fetch!(@score.job.description, "job_title")%></h4>
  <p>Company: <%= Map.fetch!(@score.job.description, "company_name")%></p>
  <p><%= Map.fetch!(@score.job.description, "para_1")%></p>
  <p><%= Map.fetch!(@score.job.description, "para_2")%></p>

  <h4>Talent: <%= Map.fetch!(@score.talent.resume, "talent_id")%></h4>
  <p>Skills: <%= Map.fetch!(@score.talent.resume, "skills") |> Enum.map_join(", ", fn(skill) -> if is_map(skill), do: Map.fetch!(skill, "name"), else: Tuple.to_list(skill) |> List.last end) %></p>
  <p><%= Map.fetch!(@score.talent.resume, "summary") |> Floki.parse |> Floki.text %></p>
  <%= try do; Map.fetch!(@score.talent.resume, "experience_entries") |> Enum.map(fn(entry) -> raw("<li>#{Enum.map(entry, fn({k,v}) -> "<p><strong>#{k}:</strong> #{v}</p>" end)}</li>") end); rescue; _ -> Map.fetch!(@score.talent.resume, "experience_entries") |> Poison.encode!(pretty: true) |> raw; end %>

  <%= render "form.html", changeset: @changeset,
                        action: feedback_path(@conn, :create) %>

<% else %>
  <p>Sorry No match there to feedback ;(</p>
<% end %>
